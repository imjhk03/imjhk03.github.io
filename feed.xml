<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://imjhk03.github.io/</id><title>Joohee Kim's Blog</title><subtitle>A minimal, portfolio, personal blog.</subtitle> <updated>2023-01-22T07:45:27+00:00</updated> <author> <name>Joohee Kim</name> <uri>https://imjhk03.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://imjhk03.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko-KR" href="https://imjhk03.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> © 2023 Joohee Kim </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Multiple Pages Xcode Playground</title><link href="https://imjhk03.github.io/posts/multiple-pages-xcode-playground/" rel="alternate" type="text/html" title="Multiple Pages Xcode Playground" /><published>2023-01-09T00:00:00+00:00</published> <updated>2023-01-09T03:07:15+00:00</updated> <id>https://imjhk03.github.io/posts/multiple-pages-xcode-playground/</id> <content src="https://imjhk03.github.io/posts/multiple-pages-xcode-playground/" /> <author> <name>Joohee Kim</name> </author> <summary> 간단한 스위프트 코드를 작성할 때 Xcode Playground를 사용한다. Xcode Playground 파일을 생성하면 하나의 플레이그라운드에서 코드를 작성하게 되는데, 여러 플레이그라운드 파일들을 묶고 싶은 경우가 있다. 예를 들어, 하나의 주제를 가지고 다양한 코드 방법을 파일별로 정리하거나 문법 공부할 때 문법별로 정리하는 경우가 있다. 이럴 때 멀티 페이지를 만드는 방법을 소개하겠다. Playground Page 생성하기 Xcode에서 플레이그라운드를 만들고 나서 File &amp;gt; New &amp;gt; Playground Page를 선택하면 하나의 플레이그라운드 프로젝트 안에 ‘Untitled Page’ 와 ‘Untitled Page 2’가 생기는 것을 확인할 수 있다. 이런 식으로 ... </summary> </entry> <entry><title>2022 하반기 회고</title><link href="https://imjhk03.github.io/posts/2022-the-second-half-retrospect/" rel="alternate" type="text/html" title="2022 하반기 회고" /><published>2022-12-31T00:00:00+00:00</published> <updated>2022-12-31T00:00:00+00:00</updated> <id>https://imjhk03.github.io/posts/2022-the-second-half-retrospect/</id> <content src="https://imjhk03.github.io/posts/2022-the-second-half-retrospect/" /> <author> <name>Joohee Kim</name> </author> <summary> 2022 상반기 회고 벌써 2023년이 코앞이다. 하반기는 상반기에 비해서 시간이 빨리 지나간 것 같다. 상반기에는 일 위주로 작성했다면 이번 하반기에는 개인적인 일과 함께 회고를 작성했다. 운동과 여행 올해 2월부터 클라이밍 운동을 시작했는데 처음에는 많이 힘들었지만 재밌어서 꾸준히 하고 있다. 결국에는 클라이밍화랑 운동복을 따로 사서 운동하러 갈 때마다 챙기고 있다. 요즘은 바빠서 많이 못 가고 있지만, 틈날 때 가려고 노력하고 있다. 올해 내가 했던 일들 중에 클라이밍 운동을 시작한 게 제일 잘한 것 같다. 건강을 생각해서 앞으로도 쭉 할 계획이다. 지난 상반기 회고에도 작성했지만 힘들고 지치니깐 쉬고 싶은 마음이 항상 들었다. 그래서 제주도 여행 가서 호화롭게 휴식을 즐겼다. 제주도는 거... </summary> </entry> <entry><title>레츠스위프트 2022 참석 후기</title><link href="https://imjhk03.github.io/posts/lets-swift-2022/" rel="alternate" type="text/html" title="레츠스위프트 2022 참석 후기" /><published>2022-12-06T00:00:00+00:00</published> <updated>2022-12-06T00:00:00+00:00</updated> <id>https://imjhk03.github.io/posts/lets-swift-2022/</id> <content src="https://imjhk03.github.io/posts/lets-swift-2022/" /> <author> <name>Joohee Kim</name> </author> <summary> 2019년 이후로 대면 컨퍼런스 참여하는 것은 이번 Let’s Swift 행사가 처음이었다. 코로나로 인해 대면으로 컨퍼런스 참여하는 게 힘들었는데, 올해부터는 조금씩 소수 인원들만 초대해서 오프라인 컨퍼런스들이 조금씩 생기기 시작했다. 다행히 티켓팅 성공해서 이번 레츠스위프트 행사에 참여할 수 있었다. 그전에 다녔었던 오프라인 컨퍼런스는 나 혼자 다녔었는데, 이번에는 회사 iOS 팀원들 몇 명이랑 같이 가서 새로웠다. 그래서 행사 때 진행한 세션에 대한 정리보다는 행사 참여하면서 느낀 개인적인 생각을 담겨 후기를 작성했다. 스피커와 서포터 그동안 iOS 자료들을 검색해 보면 레츠스위프트 때 발표했던 멋진 내용들이 많았는데, 그 세션들을 올해는 실제로 보고 들을 수 있게 되어서 설레었다. 타임 테이... </summary> </entry> <entry><title>듀얼 모니터 보다 싱글 모니터</title><link href="https://imjhk03.github.io/posts/not-using-multiple-monitors/" rel="alternate" type="text/html" title="듀얼 모니터 보다 싱글 모니터" /><published>2022-10-24T00:00:00+00:00</published> <updated>2022-11-03T13:50:28+00:00</updated> <id>https://imjhk03.github.io/posts/not-using-multiple-monitors/</id> <content src="https://imjhk03.github.io/posts/not-using-multiple-monitors/" /> <author> <name>Joohee Kim</name> </author> <summary> 아마도 많은 개발자들은 듀얼 모니터를 사용할 것이다. 하나의 모니터에서는 메신저나 개발에 필요한 화면을 띄우고, 다른 모니터로는 개발 프로그램을 열어서 사용하는 게 대부분일 것으로 보인다. 나도 예전에는 맥북프로 화면으로 메신저를 키고 연결된 모니터로 개발 프로그램을 키고 업무를 보았다. 아니면 와이드 모니터를 사서 하나의 모니터에 반을 나눠서 프로그램을 띄워서 사용했었다. 나는 우연히 트위터에서 트윗이랑 글을 읽고 나서, 듀얼 모니터 혹은 와이드 모니터를 사용하지 않고 하나의 모니터로 업무를 보게 되었다. 사용하고 있는 개발 노트북은 맥북프로인데, 클램쉘 모드(clamshell mode)로 해서 하나의 모니터로 업무를 보는데, 생각보다 불편한 점이 없었다. 하나의 업무에만 집중하기 하나의 모니터... </summary> </entry> <entry><title>코드 리뷰를 개선할 수 있는 Danger + SwiftLint Plugin</title><link href="https://imjhk03.github.io/posts/improve-code-review-with-danger/" rel="alternate" type="text/html" title="코드 리뷰를 개선할 수 있는 Danger + SwiftLint Plugin" /><published>2022-08-30T00:00:00+00:00</published> <updated>2022-08-30T00:00:00+00:00</updated> <id>https://imjhk03.github.io/posts/improve-code-review-with-danger/</id> <content src="https://imjhk03.github.io/posts/improve-code-review-with-danger/" /> <author> <name>Joohee Kim</name> </author> <summary> 깃허브에서 PR을 올려서 코드 리뷰를 받고 있는데, 코드 리뷰를 하다 보면 코드 스타일 등에 대해서 놓친 경우가 있어서 코멘트를 다는 경우가 있다. 예를 들면 네이밍 컨벤션이 잘 지켜지지 않거나 자주 놓치는 접근 제한자 같은 것도 있다. 코드 리뷰를 하는데 이런 코드 스타일에 대해서 코멘트를 다는 시간을 줄이고 코드 리뷰를 더 효율적으로 도와줄 수 있는 Danger가 있다. 이 글에서는 Danger가 무엇이고 GitHub Actions를 이용해서 PR을 올릴 때마다 코드 스타일이나 컨벤션을 체크할 수 있는 작업을 적용하는 방법을 소개하겠다. Danger Danger는 CI 프로세스에 실행하는 도구로, 코드 리뷰 관련 작업을 자동화 작업을 진행한다. Dangerfile이라는 파일을 가지고 어떤 동작을... </summary> </entry> </feed>
